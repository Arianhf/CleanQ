# Generated by Django 2.2.1 on 2019-05-16 13:32

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BasicUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(help_text='representative of the clinic', max_length=300, verbose_name='rep')),
            ],
        ),
        migrations.CreateModel(
            name='ClinicRepresentative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': [('create_time_slot', 'Can create new time slots for current clinic'), ('remove_time_slot', 'Can remove time slots for current clinic'), ('remove_clinic', 'Can remove a clinic'), ('create_clinic', 'Can create new clinic')],
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='start time')),
                ('end_time', models.DateTimeField(blank=True, default=datetime.datetime(2019, 5, 16, 16, 32, 10, 601108, tzinfo=utc), verbose_name='end time')),
                ('clinic', models.ForeignKey(help_text='the clinic that this time slot belongs to', on_delete=django.db.models.deletion.CASCADE, to='clinic.Clinic', verbose_name='clinic')),
                ('reserver', models.ForeignKey(blank=True, default=None, help_text='representative of the clinic', null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.BasicUser', verbose_name='rep')),
            ],
        ),
    ]
